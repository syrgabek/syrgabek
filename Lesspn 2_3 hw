
class Computer:
    def __init__(self,memory,cpu):
        self.__memory = memory
        self.__cpu =  cpu
        
    @property
    def memory(self):
        return self.__memory

    @memory.setter
    def memory(self, value):
        self.__memory = value

    @property
    def cpu(self):
        return self.__cpu

    @cpu.setter
    def cpu(self, value):
        self.__cpu = value

    def make_computations(self  ):
        return f'CPU + Memory = {self.__cpu + self.__memory}'





class Phone:
    def __init__(self,sim_cards_list):
        self.__sim_cards_list = sim_cards_list
    @property
    def sim_cards_list(self):
        return self.__sim_cards_list

    @sim_cards_list.setter
    def sim_cards_list(self, value):
        self.__sim_cards_list = value

    def call(self,sim_card_number, call_to_number,):
        print(f'Идет звонок на номер {call_to_number} с сим-карты-{sim_card_number}')

class SmartPhone(Computer, Phone):
    def __init__(self, cpu, memory, *sim_cards_list):
        Computer.__init__(self, cpu, memory)
        Phone.__init__(self, sim_cards_list)

    def use_gps(self, location):
        print(f"Локация отмечена, ведется маршрут в {location}")

    def __str__(self):
        return f"CPU: {self.cpu} Memory:{self.memory} Sim card: {self.sim_cards_list}"

sim = ["1 - call_to_number "]
sim1 =["2 -call_to_number "]
pp = Computer(4500, 9)
pp.make_computations()
apa = Phone(1)
smartP = SmartPhone(999, 5, sim)
smartP2 = SmartPhone(4600, 4, sim1)
smartP.call("+996 704 42 98 81", sim[0])
smartP.use_gps("дордой")


print(pp)
print(pp.make_computations())
print(apa)
print(smartP)
print(smartP2)
# print(pp > smartP)
